/**************************************************************************//**
	@file		Materials.h
	@brief		画像やサウンドなどを一括で読み込んで素材として保持しているクラス 定義ファイル		
	@author		K.Seto
	@date		2011-10-23 
	@par		[説明]
				このゲームプレイ中に使われている素材は多くないので
				フォント、サウンド、画像は読み込んでこのクラスが保持している。
				メンバ関数を通して各素材クラスのポインタを取得してアクセスできる。
*//***************************************************************************/

#ifndef INCLUDE_MATERIALS_H
#define INCLUDE_MATERIALS_H

#include "ofMain.h"
#include <vector>
#include <map>
#include <string>

/////////////////////////////////////////////////
/// Forward Declaration
class PairImages;

/**********************************************************************//**
	@class		Materials
	@brief		画像やサウンドなどを一括で読み込んで素材として保持しているクラス 
	@par		[説明]

*//***********************************************************************/
class Materials{
public:
	//////////////////////////////////////////////////////////////////////////
	// Public Function

	/**********************************************************************//**
		@brief		インスタンスを取得
		@return		マテリアルスクラスへのポインタ
		@par		インスタンスがない場合はインスタンスを生成してそのポインタを返す。
	*//***********************************************************************/
	static Materials* Instance();

	/**********************************************************************//**
		@brief		インスタンスを破棄
		@return		なし
		@par		インスタンスがない場合は何もしない。		
	*//***********************************************************************/
	static void Destroy();
	
	/**********************************************************************//**
		@brief		更新クラス
		@return		なし
	*//***********************************************************************/
	void Update();

	/**********************************************************************//**
		@brief		Sサイズのフォントのポインタを返す
		@return		フォントクラスのポインタ
	*//***********************************************************************/
	ofTrueTypeFont* GetSSizeFont();

	/**********************************************************************//**
		@brief		Mサイズのフォントのポインタを返す
		@return		フォントクラスのポインタ
	*//***********************************************************************/
	ofTrueTypeFont* GetMSizeFont();

	/**********************************************************************//**
		@brief		Lサイズのフォントのポインタを返す
		@return		フォントクラスのポインタ
	*//***********************************************************************/
	ofTrueTypeFont* GetLSizeFont();

	/**********************************************************************//**
		@brief		タイトル中のサウンドクラスポインタを取得する
		@return		タイトルのサウンドクラスポインタ
	*//***********************************************************************/
	ofSoundPlayer* GetSoundTitle();
	/**********************************************************************//**
		@brief		ゲームプレイ中のサウンドクラスポインタを取得する
		@return		ゲームプレイのサウンドクラスポインタ
	*//***********************************************************************/
	ofSoundPlayer* GetSoundPlay();
	/**********************************************************************//**
		@brief		エンディング中のサウンドクラスポインタを取得する
		@return		エンディングのサウンドクラスポインタ
	*//***********************************************************************/
	ofSoundPlayer* GetSoundEnd();

	/**********************************************************************//**
		@brief		菌の名前から菌に対応した画像ペアクラスを取得する
		@param[in]	kinName	菌の名前
		@return		画像ペアクラス
		@par		キーとして菌の名前を引数に取る		
	*//***********************************************************************/
	PairImages* GetKinPairImageByKey(const string& kinName);

private:
	//////////////////////////////////////////////////////////////////////////
	// Private Function
	
	/**********************************************************************//**
		@brief		コンストラクタ
		@return		なし
		@par		シングルトンクラスなのでプライベート指定		
	*//***********************************************************************/
	Materials();
	
	/**********************************************************************//**
		@brief		デストラクタ
		@return		なし
		@par		シングルトンクラスなのでプライベート指定
	*//***********************************************************************/
	~Materials();
	// コピー禁止
	Materials(const Materials&);

	//////////////////////////////////////////////////////////////////////////
	// Private Variable
	static Materials* m_pInstance; //<! 唯一のインスタンスメンバポインタ

	ofTrueTypeFont m_sSizeFont; //<! Sサイズのフォントクラスポインタ
	ofTrueTypeFont m_mSizeFont; //<! Mサイズのフォントクラスポインタ
	ofTrueTypeFont m_lSizeFont; //<! Lサイズのフォントクラスポインタ

	// 菌の画像クラス
	std::map<string, PairImages*> m_kinImagesMap;

	// 菌の画像
	ofImage daruma1, daruma2;
	ofImage futago1, futago2;
	ofImage gohonashi1, gohonashi2;
	ofImage hashibiro1, hashibiro2;
	ofImage kadosikaku1, kadosikaku2;
	ofImage kuma1, kuma2;
	ofImage mitugo1, mitugo2;
	ofImage rarmen1, rarmen2;
	ofImage raten1, raten2;
	ofImage sikaku1, sikaku2;
	ofImage sippo1, sippo2;
	ofImage takoashi1, takoashi2;

	// BGM
	ofSoundPlayer soundTitle;
	ofSoundPlayer soundPlay;
	ofSoundPlayer soundEnd;
};


#endif // INCLUDE_MATERIALS_H
