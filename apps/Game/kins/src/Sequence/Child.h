/**************************************************************************//**
	@file		Child.h
	@brief		シーケンス制御のための基底クラス		定義ファイル	
	@author		K.Seto
	@date		2011-11-4
	@par		[説明]
				シーケンス制御のための基底クラス
				タイトルやゲーム説明などのシーケンスクラスに継承する。
*//***************************************************************************/

#ifndef INCLUDE_SEQUENCE_CHILD_H
#define INCLUDE_SEQUENCE_CHILD_H

namespace Sequence{
	/////////////////////////////////////////////////
	/// Forward Declaration
	class Parent;

	/**********************************************************************//**
		@class		Child
		@brief		シーケンスクラスのインターフェイス
		@par		[説明]
		更新、描画のインターフェイスを定義する。
		継承先でメンバ関数をオーバーロードして使う。
	*//***********************************************************************/
	class Child{
	public:
		//////////////////////////////////////////////////////////////////////////
		/// Public Function
		/**********************************************************************//**
			@brief		デストラクタ
			@return		なし
			@note
			@par		
		*//***********************************************************************/
		virtual ~Child(){}
		/**********************************************************************//**
			@brief		更新関数
			@param[in]	Parent *	シーケンスの親クラス
			@return		更新後のシーケンスクラス
			@note
			@par		
		*//***********************************************************************/
		virtual Child* Update( Parent* ) = 0;

		/**********************************************************************//**
			@brief		描画関数
			@return		なし
			@note
			@par		
		*//***********************************************************************/
		virtual void Draw() = 0;

	};
};

#endif
